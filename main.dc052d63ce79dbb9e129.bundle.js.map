{"version":3,"file":"main.dc052d63ce79dbb9e129.bundle.js","sources":["webpack:///./src/Atoms/Flexbox/FlexboxItem.tsx"],"sourcesContent":["import React from 'react';\nimport styled from 'styled-components';\nimport * as R from 'ramda';\nimport { Props, PropsWithGutter } from './FlexboxItem.types';\n\nconst isNumber = (x: any): x is number => x === parseInt(x, 10);\nconst isUndefined = (x: any): x is undefined => typeof x === 'undefined';\n\nconst getSize = (size: Props['size']) => {\n  const oneCol = 100 / 12;\n\n  if (isUndefined(size)) {\n    return null;\n  }\n\n  if (isNumber(size)) {\n    const percentage = `${oneCol * size}%`;\n\n    return `\n      max-width: ${percentage};\n      flex-basis: ${percentage};\n    `;\n  }\n\n  return `\n    max-width: ${size};\n    flex-basis: ${size};\n  `;\n};\n\nconst StyledItem = styled.div<Props>`\n  box-sizing: border-box;\n  ${({ size }) => size && getSize(size)}\n  ${({ order }) => (order ? `order: ${order};` : '')}\n  ${({ grow }) => (grow ? `flex-grow: ${grow};` : '')}\n  ${({ shrink }) => (shrink ? `flex-shrink: ${shrink};` : '')}\n  ${({ basis }) => (basis ? `flex-basis: ${basis};` : '')}\n  ${({ flex }) => (flex ? `flex: ${flex};` : '')}\n  ${({ align }) => (align ? `align-self: ${align};` : '')}\n`;\n\nconst StyledItemWithHorisontalGutter = styled(StyledItem)<PropsWithGutter>`\n  ${props => {\n    const { gutter = props.theme.spacing.gutter } = props;\n\n    return `\n      padding-left: ${props.theme.spacing.unit(gutter / 2)}px;\n      padding-right: ${props.theme.spacing.unit(gutter / 2)}px;\n    `;\n  }}\n`;\n\nconst StyledItemWithVerticalGutter = styled(StyledItem)<PropsWithGutter>`\n  ${props => {\n    const { gutter = props.theme.spacing.gutter } = props;\n\n    return `\n      padding-top: ${props.theme.spacing.unit(gutter / 2)}px;\n      padding-bottom: ${props.theme.spacing.unit(gutter / 2)}px;\n    `;\n  }}\n`;\n\nconst withoutSCProps = R.omit(['css', 'as']);\n\nexport const ItemWithHorisontalGutter: React.FunctionComponent<PropsWithGutter> = props => (\n  <StyledItemWithHorisontalGutter {...withoutSCProps(props)} />\n);\nItemWithHorisontalGutter.displayName = 'Flexbox.Item';\nexport const ItemWithVerticalGutter: React.FunctionComponent<PropsWithGutter> = props => (\n  <StyledItemWithVerticalGutter {...withoutSCProps(props)} />\n);\nItemWithVerticalGutter.displayName = 'Flexbox.Item';\n\nexport const Item: React.FunctionComponent<Props> = props => (\n  <StyledItem {...withoutSCProps(props)} />\n);\nItem.displayName = 'Flexbox.Item';\n"],"mappings":"AAQA","sourceRoot":""}